// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String    @id @default(cuid())
  name                  String    @default("")
  firstname             String    @default("")
  lastname              String    @default("")
  email                 String    @unique @default("")
  phoneNumber           String    @default("")
  phoneNumberRegionCode String    @default("")
  password              String
  isAdmin               Boolean   @default(false)
  registeredAt          DateTime? @default(now())
  createdAt             DateTime? @default(now())
  mall                  Mall?     @relation("User_mall", fields: [mallId], references: [id])
  mallId                String?   @map("mall")

  @@index([mallId])
}

model Client {
  id                    String    @id @default(cuid())
  firstname             String    @default("")
  lastname              String    @default("")
  email                 String    @unique @default("")
  phoneNumber           String    @default("")
  phoneNumberRegionCode String    @default("")
  registeredAt          DateTime? @default(now())
  createdAt             DateTime? @default(now())
  store                 Store?    @relation("Client_store", fields: [storeId], references: [id])
  storeId               String?   @map("store")
  mall                  Mall?     @relation("Client_mall", fields: [mallId], references: [id])
  mallId                String?   @map("mall")
  payments              Payment[] @relation("Client_payments")

  @@index([storeId])
  @@index([mallId])
}

model Mall {
  id           String    @id @default(cuid())
  name         String    @default("")
  location     Json?     @default("{\"address\":\"\",\"city\":\"\",\"country\":\"\"}")
  openingHours Json?     @default("{\"monday\":\"\",\"tuesday\":\"\",\"wednessday\":\"\",\"thursday\":\"\",\"friday\":\"\",\"saturday\":\"\",\"sunday\":\"\"}")
  totalStores  Int?
  createdAt    DateTime? @default(now())
  users        User[]    @relation("User_mall")
  stores       Store[]   @relation("Mall_stores")
  clients      Client[]  @relation("Client_mall")
  payments     Payment[] @relation("Mall_payments")
}

model Store {
  id        String      @id @default(cuid())
  name      String      @default("")
  type      StoreType[] @relation("Store_type")
  createdAt DateTime?   @default(now())
  mall      Mall[]      @relation("Mall_stores")
  client    Client[]    @relation("Client_store")
  payments  Payment[]   @relation("Payment_store")
}

model StoreType {
  id              String    @id @default(cuid())
  name            String    @default("")
  created_at      DateTime? @default(now())
  from_Store_type Store[]   @relation("Store_type")
}

model Payment {
  id                String           @id @default(cuid())
  client            Client[]         @relation("Client_payments")
  store             Store?           @relation("Payment_store", fields: [storeId], references: [id])
  storeId           String?          @map("store")
  mall              Mall[]           @relation("Mall_payments")
  paymentMethod     PaymentMethod?   @relation("Payment_paymentMethod", fields: [paymentMethodId], references: [id])
  paymentMethodId   String?          @map("paymentMethod")
  paymentCurrency   PaymentCurrency? @relation("Payment_paymentCurrency", fields: [paymentCurrencyId], references: [id])
  paymentCurrencyId String?          @map("paymentCurrency")
  amount            Int
  status            String           @default("pending")
  notes             String           @default("")
  createdAt         DateTime?        @default(now())

  @@index([storeId])
  @@index([paymentMethodId])
  @@index([paymentCurrencyId])
}

model PaymentMethod {
  id        String    @id @default(cuid())
  name      String    @default("")
  createdAt DateTime? @default(now())
  payments  Payment[] @relation("Payment_paymentMethod")
}

model PaymentCurrency {
  id        String    @id @default(cuid())
  name      String    @default("")
  symbol    String    @default("")
  createdAt DateTime? @default(now())
  payments  Payment[] @relation("Payment_paymentCurrency")
}
